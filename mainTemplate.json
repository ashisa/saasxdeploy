{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Location": {
            "type": "string",
            "metadata": {
                "description": "Location to create the Azure resources in"
            }
        },
        "resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group where the SaaS Accelerator resources will be deployed"
            }
        },
        "ManagedIdentityName": {
            "type": "string",
            "metadata": {
                "description": "Name of the managed identity with required Microsoft Entra roles assigned"
            }
        },
        "ManagedIdentityResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group where the managed identity is created"
            }
        },
        "WebAppNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix used for creating web applications"
            }
        },
        "PublisherAdminUsers": {
            "type": "string",
            "metadata": {
                "description": "Provide a list of email addresses (as comma-separated-values) that should be granted access to the Publisher Portal"
            },
            "defaultValue": ""
        },
        "SqlAdminLoginPassword": {
            "type": "securestring",
            "defaultValue": "[newGuid()]"
        }
    },
    "variables": {
        "expDate": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P2Y'))]",
        "resourceGroup": "[parameters('resourceGroup')]",
        "alwaysOn": true,
        "skuCode": "B1",
        "AdAuthenticationEndPoint": "[environment().authentication.loginEndpoint]",
        "appServicePlanName": "[concat(parameters('webAppNamePrefix'),'-asp')]",
        "customerPortalAppName": "[concat(parameters('webAppNamePrefix'),'-portal')]",
        "adminPortalAppName": "[concat(parameters('webAppNamePrefix'),'-admin')]",
        "fulFillmentAPIBaseURL": "https://marketplaceapi.microsoft.com/api",
        "adminPortalRedirectURI2": "[concat('https://', variables('adminPortalAppName'), '.azurewebsites.net/Home/Index')]",
        "customerPortalRedirectURI1": "[concat('https://', variables('customerPortalAppName'), '.azurewebsites.net')]",
        "customerPortalRedirectURI2": "[concat('https://', variables('customerPortalAppName'), '.azurewebsites.net/Home/Index')]",
        "webhook": "[concat('https://', variables('customerPortalAppName'), '.azurewebsites.net/api/AzureWebhook')]",
        "sqlServerName": "[concat(parameters('webAppNamePrefix'),'-sql')]",
        "sqlServerNameFull": "[concat(parameters('webAppNamePrefix'),'-sql', environment().suffixes.sqlServerHostname)]",
        "sqlDBName": "AMPSaaSDB",
        "sqlAdminLogin": "[concat('saasdbadmin', substring(uniqueString(resourceGroup().id),0,6))]",
        "sqlAdminLoginPassword": "[parameters('SqlAdminLoginPassword')]",
        "networkName": "[concat(parameters('webAppNamePrefix'),'-net')]",
        "kvName": "[concat(parameters('webAppNamePrefix'),'-kv')]",
        "aadApplicationSecretName": "ADApplicationSecret",
        "defaultConnectionSecretName": "DefaultConnection",
        "aadAppSetting": "[concat('@Microsoft.KeyVault(VaultName=',variables('kvName'), ';SecretName=', variables('aadApplicationSecretName'),')')]",
        "defaultConnectionSetting": "[concat('@Microsoft.KeyVault(VaultName=',variables('kvName'), ';SecretName=', variables('defaultConnectionSecretName'),')')]",
        "defaultConnectionSecret": "[concat('Data Source=tcp:', variables('sqlServerNameFull'), ',1433;Initial Catalog=AMPSaaSDB', ';User Id=', variables('sQLAdminLogin'), '@', variables('sqlServerNameFull'), ';Password=', variables('sQLAdminLoginPassword'), ';')]",
        "customerSitePackagePath": "[uri(deployment().properties.templateLink.uri, 'CustomerSite.zip')]",
        "adminSitePackagePath": "[uri(deployment().properties.templateLink.uri, 'AdminSite.zip')]",
        "sqlScriptPath": "[uri(deployment().properties.templateLink.uri, 'script.sql')]",
        "$fxv#0": "cd /mnt/azscripts/azscriptinput\r\nls\r\nInstall-Module sqlserver -Force\r\nInvoke-Sqlcmd -InputFile /mnt/azscripts/azscriptinput/script.sql -ServerInstance ${Env:sqlserverName} -database ${Env:sqlDBName} -Username ${Env:sqlAdminLogin} -Password ${Env:sqlAdminLoginPassword}",
        "scriptName": "[concat(guid(subscription().subscriptionId, '-script'))]",
        "bootstrapRoleAssignmentId": "[guid(concat(resourceGroup().id, 'contributor'))]",
        "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
    },
    "resources": [
        // {
        //     "name": "pid-f89634d0-50b6-4057-a124-e4b66768fef2-partnercenter",
        //     "type": "Microsoft.Resources/deployments",
        //     "apiVersion": "2020-10-01",
        //     "properties": {
        //         "mode": "Incremental",
        //         "template": {
        //             "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        //             "contentVersion": "1.0.0.0",
        //             "resources": []
        //         }
        //     }
        // },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2019-04-01-preview",
            "name": "[variables('bootstrapRoleAssignmentId')]",
            "properties": {
                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                "principalId": "[reference(resourceId(subscription().subscriptionId, parameters('ManagedIdentityResourceGroup'),'Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ManagedIdentityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('scriptName')]",
            "location": "[parameters('Location')]",
            "kind": "AzurePowerShell",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId(subscription().subscriptionId, parameters('ManagedIdentityResourceGroup'), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName'))]": {}
                }
            },
            "properties": {
                "azPowerShellVersion": "9.7",
                "primaryScriptUri": "https://raw.githubusercontent.com/ashisa/saasxdeploy/main/createappregistrations.ps1",
                "environmentVariables": [
                    {
                        "name": "WebAppNamePrefix",
                        "value": "[parameters('WebAppNamePrefix')]"
                    }
                ],
                "retentionInterval": "P1D",
                "cleanupPreference": "OnSuccess",
                "forceUpdateTag": "1.0"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-07-01",
            "name": "[variables('networkName')]",
            "location": "[parameters('Location')]",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "web",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'web')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Web",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    }
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-11-01",
            "name": "[variables('sqlServerName')]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"
            ],
            "properties": {
                "administratorLogin": "[variables('sqlAdminLogin')]",
                "administratorLoginPassword": "[variables('sqlAdminLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "type": "firewallrules",
                    "name": "AllowAllAzureIps",
                    "location": "[parameters('Location')]",
                    "apiVersion": "2021-11-01",
                    "dependsOn": [
                        "[variables('sqlServerName')]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        // {
        //     "name": "[concat(variables('sqlServerName'),'/ActiveDirectory')]",
        //     "type": "Microsoft.Sql/servers/administrators",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
        //     ],
        //     "apiVersion": "2021-11-01",
        //     "properties": {
        //         "administratorType": "ActiveDirectory",
        //         "login": "[parameters('AadSqlAdminUsers')]",
        //         "sid": "[parameters('AadAdminObjectId')]",
        //         "tenantId": "[tenant().tenantId]"
        //     }
        // },
        {
            "comments": "Allowing Access from Web subnet to the SQL Server",
            "type": "Microsoft.Sql/servers/virtualNetworkRules",
            "name": "[concat(variables('sqlServerName'), '/internal')]",
            "apiVersion": "2021-11-01",
            "scale": null,
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'web')]",
                "ignoreMissingVnetServiceEndpoint": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDBName'))]",
                "[resourceId('Microsoft.Resources/deploymentScripts', 'createSqlSchema')]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-11-01",
            "name": "[concat(string(variables('sqlServerName')), '/', string(variables('sqlDBName')))]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "sku": {
                "name": "S0",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "createSqlSchema",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDBName'))]"
            ],
            "kind": "AzurePowerShell",
            "properties": {
                "azPowerShellVersion": "8.0",
                "scriptContent": "[variables('$fxv#0')]",
                "timeout": "PT4H",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "supportingScriptUris": [
                    "[variables('sqlScriptPath')]"
                ],
                "environmentVariables": [
                    {
                        "name": "sqlserverName",
                        "value": "[variables('sqlServerNameFull')]"
                    },
                    {
                        "name": "sqlDBName",
                        "value": "[variables('sqlDBName')]"
                    },
                    {
                        "name": "sqlAdminLogin",
                        "value": "[variables('sqlAdminLogin')]"
                    },
                    {
                        "name": "sqlAdminLoginPassword",
                        "secureValue": "[variables('sqlAdminLoginPassword')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', 'createSqlSchema')]"
            ],
            "sku": {
                "name": "[variables('skuCode')]",
                "capacity": "1"
            },
            "tags": {
                "displayName": "[variables('appServicePlanName')]"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]"
            },
            "kind": "linux"
        },
        {
            "name": "[variables('customerPortalAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "location": "[parameters('Location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "displayName": "[variables('customerPortalAppName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "properties": {
                "name": "[variables('customerPortalAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "virtualNetworkSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))).subnets[1].id]",
                "httpsOnly": true,
                "siteConfig": {
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "dotnet"
                        }
                    ],
                    "phpVersion": "OFF",
                    "netFrameworkVersion": "v6.0",
                    "alwaysOn": "[variables('alwaysOn')]",
                    "ftpsState": "FtpsOnly",
                    "http20Enabled": false,
                    "minTlsVersion": "1.2"
                }
            },
            "resources": [
                {
                    "apiVersion": "2022-03-01",
                    "name": "MSDeploy",
                    "type": "Extensions",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('customerPortalAppName'))]"
                    ],
                    "properties": {
                        "packageUri": "[variables('customerSitePackagePath')]"
                    }
                }
            ]
        },
        {
            "name": "[variables('adminPortalAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "location": "[parameters('Location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "displayName": "[variables('adminPortalAppName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Web/sites', variables('customerPortalAppName'))]",
                "[resourceId('Microsoft.Web/sites/extensions', variables('customerPortalAppName'), 'MSDeploy')]"
            ],
            "properties": {
                "name": "[variables('adminPortalAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "virtualNetworkSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))).subnets[1].id]",
                "httpsOnly": true,
                "siteConfig": {
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "dotnet"
                        }
                    ],
                    "phpVersion": "OFF",
                    "netFrameworkVersion": "v6.0",
                    "alwaysOn": "[variables('alwaysOn')]",
                    "ftpsState": "FtpsOnly",
                    "http20Enabled": false,
                    "minTlsVersion": "1.2"
                }
            },
            "resources": [
                {
                    "apiVersion": "2022-03-01",
                    "name": "MSDeploy",
                    "type": "Extensions",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('adminPortalAppName'))]"
                    ],
                    "properties": {
                        "packageUri": "[variables('adminSitePackagePath')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-07-01",
            "name": "[variables('kvName')]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('adminPortalAppName'))]",
                "[resourceId('Microsoft.Web/sites/extensions', variables('adminPortalAppName'), 'MSDeploy')]"
            ],
            "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enablePurgeProtection": true,
                "enableSoftDelete": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('customerPortalAppName')), '2022-03-01', 'Full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "secrets": [
                                "list",
                                "get"
                            ]
                        }
                    },
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('adminPortalAppName')), '2022-03-01', 'Full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "secrets": [
                                "list",
                                "get"
                            ]
                        }
                    }
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'web')]",
                            "ignoreMissingVnetServiceEndpoint": false
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-07-01",
            "name": "[format('{0}/{1}', variables('kvName'), variables('aadApplicationSecretName'))]",
            "properties": {
                "value": "[split(reference(variables('scriptName')).outputs.text, '#')[1]]",
                "attributes": {
                    "enabled": true,
                    "exp": "[variables('expDate')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-07-01",
            "name": "[format('{0}/{1}', variables('kvName'), variables('defaultConnectionSecretName'))]",
            "properties": {
                "value": "[variables('defaultConnectionSecret')]",
                "attributes": {
                    "enabled": true,
                    "exp": "[variables('expDate')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('customerPortalAppName'), '/appsettings')]",
            "apiVersion": "2022-03-01",
            "properties": {
                "SaaSApiConfiguration__AdAuthenticationEndPoint": "[variables('AdAuthenticationEndPoint')]",
                "SaaSApiConfiguration__TenantId": "[tenant().tenantId]",
                "SaaSApiConfiguration__ClientId": "[split(reference(variables('scriptName')).outputs.text, '#')[0]]",
                "SaaSApiConfiguration__ClientSecret": "[variables('aadAppSetting')]",
                "SaaSApiConfiguration__MTClientId": "[split(reference(variables('scriptName')).outputs.text, '#')[2]]",
                "SaaSApiConfiguration__FulFillmentAPIBaseURL": "[variables('fulFillmentAPIBaseURL')]",
                "SaaSApiConfiguration__FulFillmentAPIVersion": "2018-08-31",
                "SaaSApiConfiguration__GrantType": "client_credentials",
                "SaaSApiConfiguration__Resource": "20e940b3-4c77-4b0b-9a53-9e16a1b010a7",
                "SaaSApiConfiguration__SaaSAppUrl": "",
                "SaaSApiConfiguration__SignedOutRedirectUri": "[variables('customerPortalRedirectURI2')]",
                "WEBSITE_HTTPLOGGING_RETENTION_DAYS": "1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('aadApplicationSecretName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('defaultConnectionSecretName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('adminPortalAppName'), '/appsettings')]",
            "apiVersion": "2022-03-01",
            "properties": {
                "SaaSApiConfiguration__AdAuthenticationEndPoint": "[variables('AdAuthenticationEndPoint')]",
                "SaaSApiConfiguration__TenantId": "[tenant().tenantId]",
                "SaaSApiConfiguration__ClientId": "[split(reference(variables('scriptName')).outputs.text, '#')[0]]",
                "SaaSApiConfiguration__ClientSecret": "[variables('aadAppSetting')]",
                "SaaSApiConfiguration__MTClientId": "[split(reference(variables('scriptName')).outputs.text, '#')[2]]",
                "SaaSApiConfiguration__FulFillmentAPIBaseURL": "[variables('fulFillmentAPIBaseURL')]",
                "SaaSApiConfiguration__FulFillmentAPIVersion": "2018-08-31",
                "SaaSApiConfiguration__GrantType": "client_credentials",
                "SaaSApiConfiguration__Resource": "20e940b3-4c77-4b0b-9a53-9e16a1b010a7",
                "SaaSApiConfiguration__SaaSAppUrl": "",
                "SaaSApiConfiguration__SignedOutRedirectUri": "[variables('adminPortalRedirectURI2')]",
                "SaaSApiConfiguration__SupportmeteredBilling": "false",
                "KnownUsers": "[parameters('PublisherAdminUsers')]",
                "WEBSITE_HTTPLOGGING_RETENTION_DAYS": "1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('aadApplicationSecretName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('defaultConnectionSecretName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('customerPortalAppName'), '/connectionstrings')]",
            "apiVersion": "2022-03-01",
            "properties": {
                "DefaultConnection": {
                    "value": "[variables('defaultConnectionSetting')]",
                    "type": "SQLServer"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('aadApplicationSecretName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('defaultConnectionSecretName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('adminPortalAppName'), '/connectionstrings')]",
            "apiVersion": "2022-03-01",
            "properties": {
                "DefaultConnection": {
                    "value": "[variables('defaultConnectionSetting')]",
                    "type": "SQLServer"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('aadApplicationSecretName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), variables('defaultConnectionSecretName'))]"
            ]
        }
    ],
    "outputs": {
        "saas_offer_Landing_Page_URL": {
            "type": "string",
            "value": "[variables('customerPortalRedirectURI1')]"
        },
        "saas_offer_Connection_Webhook_URL": {
            "type": "string",
            "value": "[variables('webhook')]"
        },
        "saas_offer_Microsoft_Entra_Tenant_ID": {
            "type": "string",
            "value": "[tenant().tenantId]"
        },
        "saas_offer_Microsoft_Entra_Application_ID": {
            "type": "string",
            "value": "[split(reference(variables('scriptName')).outputs.text, '#')[0]]"
        }
    }
}